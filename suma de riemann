{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNnHJU7WbSSBSAi6VzeI3bH",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/adrianabarrera10/MetodosNumericos/blob/master/suma%20de%20riemann\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X2WQswrwmOGt",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "0a3fb18e-a2db-4af9-dd38-4c10983a8389"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "#SUMA DE RIEMANN\n",
        "#es un tipo de aproximación del valor de una integral mediante una suma finita\n",
        "#se calcula dividiendo la región en formas (rectángulos, trapezoides, parábolas o cúbicas) \n",
        "#que juntas forman una región que es similar a la región que se está midiendo, luego calculando el \n",
        "#área para cada una de estas formas y, finalmente, agregando todas estas pequeñas áreas juntas. Este enfoque se puede \n",
        "#usar para encontrar una aproximación numérica para una integral definida incluso si el teorema fundamental del cálculo no facilita encontrar una solución de forma cerrada.\n",
        "\n",
        "def riemannplot(f, a, b, ra, rb, n):\n",
        "    # f es la función \n",
        "    # a y b son los limites del eje x para graficar la funcion f\n",
        "    # ra y rb son los limites del intervalo en el eje x del que queremos calcular la suma\n",
        "    # n es el numero de rectangulos que calcularemos\n",
        "\n",
        "    atenuacion = (b-a)/100\n",
        "    x = np.arange(a, b+atenuacion, atenuacion)\n",
        "    plt.plot(x, f(x), color='green')\n",
        "\n",
        "    delta_x = (rb-ra)/n\n",
        "    riemannx = np.arange(ra, rb, delta_x)\n",
        "    riemanny = f(riemannx)\n",
        "    riemann_sum = sum(riemanny*delta_x)\n",
        "\n",
        "    plt.bar(riemannx,riemanny,width=delta_x,alpha=0.5,facecolor='orange')\n",
        "    plt.xlabel('x')\n",
        "    plt.ylabel('f(x)')\n",
        "    plt.title('Suma izquierda de Riemann para f(x)')\n",
        "    plt.figtext(0.1,0.02, \"Suma de Riemann: \" + str(riemann_sum), color='r')\n",
        "    plt.show()\n",
        "\n",
        "\n",
        "\n",
        "def f(x):\n",
        "    return x**2\n",
        "\n",
        "riemannplot(f, 0, 1.1, 0, 1, 10)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}